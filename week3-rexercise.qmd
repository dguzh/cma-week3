---
title: "week3-rexercise"
format: html
editor: visual
---

## Sabi Demo

```{r}
library('readr')
library('dplyr')
library('ggplot2')

wildschwein <- read_csv('data/wildschwein_BE_2056.csv')

sabi <- wildschwein |>
  filter(TierName == 'Sabi') |>
  filter(DatetimeUTC >= as.POSIXct('2015-07-01', tz = 'UTC'), DatetimeUTC < as.POSIXct('2015-07-03', tz = 'UTC'))

sabi <- sabi |>
    mutate(
        nMinus2 = sqrt((lag(E, 2) - E)^2 + (lag(N, 2) - N)^2), # distance to pos -30 minutes
        nMinus1 = sqrt((lag(E, 1) - E)^2 + (lag(N, 1) - N)^2), # distance to pos -15 minutes
        nPlus1  = sqrt((E - lead(E, 1))^2 + (N - lead(N, 1))^2), # distance to pos +15 mintues
        nPlus2  = sqrt((E - lead(E, 2))^2 + (N - lead(N, 2))^2) # distance to pos +30 minutes
    )

sabi <- sabi |>
    rowwise() |>
    mutate(
        stepMean = mean(c(nMinus2, nMinus1, nPlus1, nPlus2))
    ) |>
    ungroup()

sabi <- sabi |>
    ungroup() |>
    mutate(static = stepMean < mean(stepMean, na.rm = TRUE))

sabi_filter <- sabi |>
    filter(!static)

sabi_filter |>
    ggplot(aes(E, N)) +
    geom_path() +
    geom_point() +
    coord_fixed() +
    theme(legend.position = "bottom")
```

## Preperation

```{r}
library("readr")
library("sf")

posmo <- read_delim("data/posmo_2023-01-01T00_00_00+01_00-2023-05-04T23_59_59+02_00.csv")

# Keep only the necessary columns
posmo <- select(posmo, datetime, lon_x, lat_y)

posmo <- st_as_sf(posmo, coords = c("lon_x","lat_y"), crs = 4326) |>
  st_transform(2056)

posmo_coordinates <- st_coordinates(posmo)

posmo <- cbind(posmo, posmo_coordinates)

posmo_filter <- posmo |>
    filter(as.Date(datetime) == "2023-04-28")
```

